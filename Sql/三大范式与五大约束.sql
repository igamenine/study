-- 为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在【关系型数据库】中这种规则就称为范式。范式是符合某一种设计要求的总结。要想设计一个结构合理的关系型数据库，必须满足一定的范式，这里则是举例比较典型的三大范式（三范式）。
-- 即非关系型数据库可以不用满足。当范式不被满足时，解决方案一般是对数据进行拆表。

-- 第一范式(1NF)
-- 在任何一个关系数据库中，第一范式（1NF）是对关系模式的基本要求，不满足第一范式（1NF）的数据库就不是关系数据库。
列应该保持原子性，即列于行的含义无法再继续拆分，同一个列、同一个行中不能有多个值，如列中联系电话可以拆分成个人电话和家庭电话、如多行中相同的内容被合并成一行，那就不符合第一范式。
-- 第二范式(2NF)
满足1NF条件的基础上，一张表必须有候选键，且候选键必须完全被非候选键所依赖。
-- 第三范式(3NF)
满足2NF条件的基础上，非候选键列必须直接依赖于候选键，不能存在传递依赖，如候选键课程编号被授课教师编号依赖，但同时有教师名称依赖于教师编号，则需要将教师名称拆分出去。

-- 总结
第一范式：确保原子性，表中每一个列数据都必须是不可再分的字段。
第二范式：确保唯一性，每张表都只描述一种业务属性，一张表只描述一件事。
第三范式：确保独立性，表中除候选键外，每个字段之间不存在任何依赖，都是独立的。

-- 五大约束
1.PRIMARY KEY(primary key):设置候选键约束；
2.UNIQUE(unique):设置唯一性约束，不能有重复值；
3.DEFAULT(default):默认值约束，height DOUBLE(3,2) height不输入是默认为(1,2)。
4. NOT NULL(not null):设置非空约束，该字段不能为空；
5. FOREIGN KEY (foreign key):设置外键约束。

-- 除了基本的三大范式以外还有额外几个范式需要了解
-- 巴斯-科德范式(BCNF/3.5NF)
满足3NF条件的基础上，联合候选键列中不能出现传递依赖的情况，如当设置班级、班主任、学生为联合候选键，那么学生就会依赖于班级和班主任，我们要将学生拆分出去。它是对第三范式的补充。
-- 第四范式(4NF)
满足BCNF条件的基础上，三列以上的表不能出现多值依赖，如想设计权限表，想偷懒将用户、角色、权限都放到一张表中，因为存在一对多的关系，所以散列互相依赖，导致数据冗余，这时要将权限表拆分成权限五表，即拆分成了用户表、角色表、权限表、用户角色关系表、角色权限关系表。经过这次拆分之后，一方面用户表、角色表、权限表中都不会有数据冗余，第二方面无论是要删除亦或新增一个角色、权限时，都不会影响其他表。
-- 第五范式(5NF)
满足4NF条件的基础上，将三列以上的单表拆分成不能再拆分的多表，如一张原本包含

-- 注意：第二范式及以上的范式均指向候选键，部分教材或资料会图方便直接以主键代称严格来说是不对的，因为候选键允许多个，主键只允许一个，非主属性（非主列）只要满足范式要求，没有规定一定符合某个特定的候选键，即只要满足所有候选键依赖均可，这个是容易出错的地方。