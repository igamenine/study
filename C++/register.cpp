`register`关键字用于告诉编译器将某个变量定义为寄存器变量，以便快速访问该变量。在程序中使用寄存器变量可以提高程序的执行速度，因为寄存器通常比内存要快得多。

然而，使用`register`关键字并不意味着变量一定会被存储到寄存器中。编译器会根据程序的需要和系统的情况来决定是否将变量存储到寄存器中。如果编译器发现没有足够的寄存器可供使用，或者对于某些类型的变量，寄存器无法提高程序的效率，则会忽略`register`关键字，并将变量存储到内存中。

另外，需要注意的是，由于寄存器的数量有限，因此不能过度使用`register`关键字，否则可能会导致编译错误。一般来说，在函数内定义的局部变量、循环计数器等需要频繁访问的变量可以使用`register`关键字定义为寄存器变量。而全局变量、数组、指针等较大的数据结构则不适合使用寄存器变量。另外，在现代处理器上，通常会使用高级的编译器优化技术，使程序能够更好地利用CPU的缓存机制，从而提高程序的性能。因此，手动使用`register`关键字的效果并不如自动的编译器优化。

寄存器是计算机中的一种特殊硬件，通常是一个能够快速读写并保存少量数据的高速内存单元。寄存器被设计为位于CPU内部，用于暂存处理器需要使用的数据、指令或者地址等信息。寄存器的主要作用是提高程序的执行速度，因为相比于内存访问，寄存器访问速度更快。